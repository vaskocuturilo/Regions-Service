name: CI Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  backend:
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:10.8.2
        ports:
          - 3306:3306
        env:
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Verify MariaDB Connection
        env:
          PORT: ${{ job.services.mariadb.ports['3306'] }}
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
            sleep 1
          done

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.4.2

      - name: Build and Test Backend
        env:
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          REACT_APP_API_KEY: ${{ secrets.REACT_APP_API_KEY }}
          REACT_APP_TOKEN: ${{ secrets.REACT_APP_TOKEN }}
        run: gradle clean build test

  frontend:
    runs-on: ubuntu-latest
    needs: backend
    strategy:
      matrix:
        node-version: [ 18.x ]
        os: [ ubuntu-latest ]
        browser: [ chrome, firefox ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm ci --force

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")')" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Build Docker Image
        run: docker-compose build --no-cache --force

      - name: Start Docker Containers
        run: |
          docker-compose -f "docker-compose.yml" up --detach --build
          for attempt in {1..20}; do sleep 1; if exit 0; then echo ready; break; fi; echo waiting...; done

      - name: Run Cypress Smoke Tests
        uses: cypress-io/github-action@v4
        with:
          command: npm run cypress:run:smoke:test -- --browser ${{ matrix.browser }}
          parallel: true

      - name: Run Cypress Sanity Tests
        uses: cypress-io/github-action@v4
        with:
          command: npm run cypress:run:sanity:test -- --browser ${{ matrix.browser }}
          parallel: true

      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results

      - name: Deploy Allure Report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-report

      - name: Stop Docker Containers
        if: always()
        run: docker-compose -f "docker-compose.yml" down
