plugins {
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'org.sonarqube' version '3.0'
}

group = 'com.regions'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = "1.9"

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'mysql:mysql-connector-java'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.6.3'

    //Lombok
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

// Testing
    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '4.5.0'
    implementation group: 'io.rest-assured', name: 'json-path', version: '4.5.0'
    implementation group: 'io.rest-assured', name: 'xml-path', version: '4.5.0'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.22.0'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.5'
}

test {
    useJUnitPlatform()
}
targetCompatibility = JavaVersion.VERSION_1_9

sonarqube {
    properties {
        property "sonar.host.url", "https://sonarcloud.io/"
        property "sonar.login", "vaskocuturilo@github - 35867c1595fbd76aaf6e7e8d48b45a4d9cf4ba1f"

        property "sonar.projectName", "Regions-Service"
        property "sonar.projectKey", "vaskocuturilo_Regions-Service"

        property "sonar.coverage.jacoco.xmlReportPaths", "$buildDir/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.junit.reportPaths", "$buildDir/test-results/test/"
        property "sonar.exclusions", "**/xmldefs/**,**/spec/api.json"
        property "sonar.cpd.exclusions", ", **/persistence/entity/**"
        property "sonar.dynamicAnalysis", "reuseReports"
        property "sonar.clover.reportPaths", "**/build/clover/clover.xml"
        property "sonar.java.coveragePlugin", "clover"
        property "sonar.sources", "src/main/kotlin"
        property "sonar.tests", "."
        property "sonar.test.inclusions", "**/*Test*/**"
    }
}

// Build should fail if coverage less than minimum.
jacocoTestCoverageVerification.dependsOn jacocoTestReport
build.finalizedBy jacocoTestCoverageVerification