buildscript {
    repositories {
        gradlePluginPortal()
    }

    dependencies {
        classpath "com.github.node-gradle:gradle-node-plugin:5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.github.node-gradle.node" version "5.0.0"
}

group = 'com.regions'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = "16"

repositories {
    mavenCentral()
}

apply plugin: 'com.github.node-gradle.node'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'mysql:mysql-connector-java'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
    implementation "org.mapstruct:mapstruct:1.5.5.Final"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.5.5.Final"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.3'

    //Performance monitor dependencies
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.6.3'

    //Lombok
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

    // Testing
    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '4.5.0'
    implementation group: 'io.rest-assured', name: 'json-path', version: '4.5.0'
    implementation group: 'io.rest-assured', name: 'xml-path', version: '4.5.0'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.22.0'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.5'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.24.2'
}

test {
    useJUnitPlatform()
}
targetCompatibility = JavaVersion.VERSION_16

test {
    systemProperty 'spring.profiles.active', 'dev'
}

node {
    // Whether to download and install a specific Node.js version or not
    // If false, it will use the globally installed Node.js
    // If true, it will download node using above parameters
    // Note that npm is bundled with Node.js
    download = false

    // Version of node to download and install (only used if download is true)
    // It will be unpacked in the workDir
    version = "16.14.0"

    // Version of npm to use
    // If specified, installs it in the npmWorkDir
    // If empty, the plugin will use the npm command bundled with Node.js
    npmVersion = ""

    // Version of Yarn to use
    // Any Yarn task first installs Yarn in the yarnWorkDir
    // It uses the specified version if defined and the latest version otherwise (by default)
    yarnVersion = ""

    // The npm command executed by the npmInstall task
    // By default it is install but it can be changed to ci
    npmInstallCommand = "install"

    // The directory where Node.js is unpacked (when download is true)
    workDir = file("${project.projectDir}/.gradle/nodejs")

    // The directory where npm is installed (when a specific version is defined)
    npmWorkDir = file("${project.projectDir}/.gradle/npm")

    // The directory where yarn is installed (when a Yarn task is used)
    yarnWorkDir = file("${project.projectDir}/.gradle/yarn")

    // The Node.js project directory location
    // This is where the package.json file and node_modules directory are located
    // By default it is at the root of the current project
    nodeProjectDir = file("${project.projectDir}/frontend/")

    // Whether the plugin automatically should add the proxy configuration to npm and yarn commands
    // according the proxy configuration defined for Gradle
    // Disable this option if you want to configure the proxy for npm or yarn on your own
    // (in the .npmrc file for instance)
    nodeProxySettings = ProxySettings.SMART
}
npm_run_build {
}

task copyTask(type: Copy) {
    from file("${project.projectDir}/frontend/build/")
    into file("${project.projectDir}/src/main/resources/static")
}